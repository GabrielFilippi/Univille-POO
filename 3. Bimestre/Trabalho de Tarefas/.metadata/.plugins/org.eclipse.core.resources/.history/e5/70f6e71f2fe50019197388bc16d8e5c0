package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import entities.UsuarioHasTarefa;

/**
 * UsuarioHasTarefa Data Acess Object
 */
public class UsuarioHasTarefaDAO extends BasicoDAO{
	

	/**
	 * Inserir uma nova UsuarioHasTarefa
	 */
	public void insert(UsuarioHasTarefa subTarefa) {

		String sql_insert_UsuarioHasTarefa = "INSERT INTO UsuarioHasTarefa(nomeUsuarioHasTarefa, descricaoUsuarioHasTarefa) VALUES(?,?)";
		try {
			
			// try with-resources
			
			try (Connection conn = getConnection();
				 PreparedStatement statement = conn.prepareStatement(sql_insert_UsuarioHasTarefa)){
				
				statement.setString(1, subTarefa.getNomeUsuarioHasTarefa());
				statement.setString(2, subTarefa.getDescricaoUsuarioHasTarefa());
				statement.execute();
			}
		}catch (Exception e){
			e.printStackTrace();
		}
		
	}
	
	/**
	 * Deletar uma UsuarioHasTarefa pelo id
	 */
	public void delete(UsuarioHasTarefa UsuarioHasTarefa) {
		
		String sql_del_UsuarioHasTarefa = "DELETE FROM UsuarioHasTarefa WHERE idUsuarioHasTarefa = ?";
		
		try(Connection conn = getConnection();
			PreparedStatement statement = conn.prepareStatement(sql_del_UsuarioHasTarefa)) {
			statement.setInt(1, UsuarioHasTarefa.getIdUsuarioHasTarefa());
			statement.execute();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Atualizar uma UsuarioHasTarefa pelo id
	 */
	public void update(UsuarioHasTarefa UsuarioHasTarefa) {
		String sql = "UPDATE UsuarioHasTarefa SET nomeUsuarioHasTarefa = ?, telefoneUsuaio = ? WHERE idUsuarioHasTarefa = ?";
		
		try (Connection conn = getConnection();
			 PreparedStatement statement = conn.prepareStatement(sql)){
			statement.setString(1, UsuarioHasTarefa.getNomeUsuarioHasTarefa());
			statement.setString(2, UsuarioHasTarefa.getDescricaoUsuarioHasTarefa());
			statement.setInt(3, UsuarioHasTarefa.getIdUsuarioHasTarefa());
			statement.execute();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Obter uma UsuarioHasTarefa pelo id
	 */
	public UsuarioHasTarefa getById(int idUsuarioHasTarefa) {
		UsuarioHasTarefa UsuarioHasTarefa = null;
		String sql_select_UsuarioHasTarefa = "SELECT * FROM UsuarioHasTarefa WHERE idUsuarioHasTarefa = ?";
		
		try(Connection conn = getConnection();
			PreparedStatement statement = conn.prepareStatement(sql_select_UsuarioHasTarefa)) {
			statement.setInt(1, idUsuarioHasTarefa);
			ResultSet resultSet = statement.executeQuery();
			if(resultSet.next()) {
				UsuarioHasTarefa = new UsuarioHasTarefa();
				UsuarioHasTarefa.setIdUsuarioHasTarefa(resultSet.getInt(1));
				UsuarioHasTarefa.setNomeUsuarioHasTarefa(resultSet.getString(2));
				UsuarioHasTarefa.setDescricaoUsuarioHasTarefa(resultSet.getString(3));
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		return UsuarioHasTarefa;
	}
	
	/**
	 * Obter todas as UsuarioHasTarefas da tabela
	 */
	public List<UsuarioHasTarefa> getAll(){
		List<UsuarioHasTarefa> list = new ArrayList<>();
		String sql = "SELECT * FROM UsuarioHasTarefa";
		
		try(Connection conn = getConnection();
			PreparedStatement statement = conn.prepareStatement(sql)) {
			ResultSet resultSet = statement.executeQuery();
			while(resultSet.next()) {
				UsuarioHasTarefa UsuarioHasTarefa = new UsuarioHasTarefa();
				UsuarioHasTarefa.setIdUsuarioHasTarefa(resultSet.getInt(1));
				UsuarioHasTarefa.setNomeUsuarioHasTarefa(resultSet.getString(2));
				UsuarioHasTarefa.setDescricaoUsuarioHasTarefa(resultSet.getString(3));
				
				list.add(UsuarioHasTarefa);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		return list;
	}
	
}
